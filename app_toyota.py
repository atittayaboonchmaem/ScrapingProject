# import streamlit as st
# import pandas as pd

# # ===============================
# # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå CSV ‡∏ó‡∏µ‡πà scrap_toyota.py ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ
# # ===============================
# @st.cache_data
# def load_data():
#     try:
#         df = pd.read_csv("toyota_carsome.csv")
#     except FileNotFoundError:
#         st.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå toyota_carsome.csv ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô scrape_toyota.py ‡∏Å‡πà‡∏≠‡∏ô")
#         return pd.DataFrame()
#     return df

# df = load_data()

# st.title("üöó ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏ñ Toyota")
# st.write("‡πÉ‡∏™‡πà‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏£‡∏ñ‡∏£‡∏∏‡πà‡∏ô‡πÉ‡∏î‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ")

# if not df.empty:
#     # ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: name, price, link
#     # ‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ('‡∏ö‡∏≤‡∏ó' ‡∏´‡∏£‡∏∑‡∏≠ ',' )
#     df['price_clean'] = (
#         df['price']
#         .astype(str)
#         .str.replace(r"[^\d]", "", regex=True)
#         .astype(float)
#     )

#     with st.form(key='budget_form'):
#         budget = st.number_input('‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (‡∏ö‡∏≤‡∏ó)', min_value=0, value=1000000, step=50000)
#         submit_button = st.form_submit_button(label='‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤')

#     if submit_button:
#         filtered = df[df['price_clean'] <= budget]

#         if not filtered.empty:
#             st.subheader("‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏á‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:")
#             st.dataframe(filtered.reset_index(drop=True))
#         else:
#             st.warning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏á‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
# else:
#     st.stop()

import streamlit as st
import pandas as pd

# ===============================
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå CSV
# ===============================
@st.cache_data
def load_data():
    try:
        # ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å scrape_toyota.py
        df = pd.read_csv("toyota_carsome.csv")
    except FileNotFoundError:
        # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå ‚Üí ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        st.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå toyota_carsome.csv ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô scrape_toyota.py ‡∏Å‡πà‡∏≠‡∏ô")
        return pd.DataFrame()

    # ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ year_brand ‡∏´‡∏£‡∏∑‡∏≠ price (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå)
    df = df.dropna(subset=["year_brand", "price"])

    # -------------------------------
    # clean ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏£‡∏≤‡∏Ñ‡∏≤ ‚Üí ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç float
    # -------------------------------
    df["price_clean"] = (
        df["price"].astype(str)                 # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô string
        .str.replace(r"[^\d]", "", regex=True)  # ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
        .astype(float)                          # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô float
    )

    # -------------------------------
    # clean ‡∏Ñ‡πà‡∏≤‡∏ú‡πà‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‚Üí float
    # -------------------------------
    df["monthly_clean"] = (
        df["monthly"].astype(str)
        .str.replace(r"[^\d]", "", regex=True)
        .astype(float)
    )

    # -------------------------------
    # clean ‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡∏•‡πå (‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£) ‚Üí float
    # -------------------------------
    df["mileage_clean"] = (
        df["mileage"].astype(str)
        .str.replace(r"[^\d]", "", regex=True)  # ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
        .replace("", "0")                       # ‡∏ñ‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏ó‡∏ô‡πÄ‡∏õ‡πá‡∏ô 0
        .astype(float)
    )

    return df


# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
df = load_data()

# -------------------------------
# ‡∏™‡πà‡∏ß‡∏ô UI ‡∏Ç‡∏≠‡∏á Streamlit
# -------------------------------
st.title("üöó ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏ñ Toyota")
st.write("‡πÉ‡∏™‡πà‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏£‡∏ñ‡∏£‡∏∏‡πà‡∏ô‡πÉ‡∏î‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ")

# -------------------------------
# ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏á
# -------------------------------
if not df.empty:
    with st.form(key='budget_form'):
        # ‡∏£‡∏±‡∏ö‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        budget = st.number_input('‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (‡∏ö‡∏≤‡∏ó)', min_value=0, value=1000000, step=50000)

        # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡πå
        transmission = st.selectbox(
            '‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡πå',
            ['‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', '‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥', '‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤']
        )

        # ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
        submit_button = st.form_submit_button(label='‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤')

    # -------------------------------
    # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‚Üí ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    # -------------------------------
    if submit_button:
        # ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
        filtered = df[df['price_clean'] <= budget]

        # ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡πå
        if transmission != '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î':
            if transmission == '‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥':
                filtered = filtered[filtered['transmission'].str.contains("‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï", case=False, na=False)]
            elif transmission == '‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤':
                filtered = filtered[filtered['transmission'].str.contains("‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤", case=False, na=False)]

        # -------------------------------
        # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        # -------------------------------
        if not filtered.empty:
            st.subheader("‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏á‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:")
            st.dataframe(
                filtered[["year_brand","model", "mileage", "transmission", "location", "price", "monthly", "link"]]
                .reset_index(drop=True)
            )
        else:
            st.warning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏á‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
else:
    # ‡∏ñ‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚Üí ‡∏´‡∏¢‡∏∏‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
    st.stop()

